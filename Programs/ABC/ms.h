struct devent {
	double time;
	int popi;
	int popj;
	double paramv;
	double **mat ;
	char detype ;
	struct devent *nextde;
	} ;
	
struct c_params {
	int npop;
	int nsam;
	int *config;
	double **mig_mat;
	double r;
	int nsites;
	double f;
	double track_len;
	double *size;
	double *alphag;
	struct devent *deventlist ;
	} ;
	
struct m_params {
	 double theta;
	int segsitesin;
	int treeflag;
        int treelengthflag;
	int mfreq;
	 } ;
	 
struct params { 
	struct c_params cp;
	struct m_params mp;
	int commandlineseedflag ;
	};

/*voy a declarar una estructura donde voy a guardar todas las variables que tengan algo que ver con los estadísticos del rejection algorithm */
struct rejection_statistics{
int rejectionflag;
float fractionsites;
float randomnumber; 
int hcounter,micronumber;
float sitebeginning;
float sitethreshold;
int flagbegin;
int flagthreshold;
signed int *microsegsite;
int **microsize;
float *mean;
float *variance;
float sum;
float squaresum;
float rejectionvariance;
int *microflag;
float *heterozygosis;
float homopart,heterozygosismean;
int configflag;
int numberconfigurations;
float **frecalelo;
float pij;
float D,Dsquared;
float **denominatorsquare;
int counterfreq;
double ld_denominator;
double delta;
float *kurtosis;
float kurtomean;
float varofvar;
float totallinkage;
float denominator;
int segtajd;
int flag;
int *maxsize;
int *minsize;
int thetavaluesnum;
float *thetavalues;
int variablethetaflag;
int *differencepairs,pairmaximum;
float *frequencypairs;
float pairmean;
float kurtonumerator;
float kurtodenominator;
float skewnumerator;
float skewdenominator;
float modefreq;
int mode;
float freqsum;
float difmeanmedian;
float difmeanmode;
float difmodemedian;
int segsitemic;
int micromax;
int micromin;
int infinitesegsites;
char **infinitesegpart;
float infinitesegcounter;
char *sitepart;
char *sitepart2;
float ispi;
float infiniteheterozygosis;
int subpop;
int *popsize;
int **datamicrosize;
float dataheterozygosis;
float datavariancemean;
int datanumberofconfig, acceptances, readacceptances, simulationnumber;
float dataFst, Fst;
float alpha;
float dif1,dif2,dif3,dif4,dif5,dif6,dif7,dif8,dif9,dif10;
float datapi,pi;
float thetaadjust;
float *datamismatch,*simmismatch;
int datamismatchmaximum, realmaximum, realminimum;
float tauthreshold, tauthresholdmin, tauthresholdmax;
char *uppersims;
int tauflag, tauflagmin, segsites;
char ***infinitesitepart;
float sizehomoplasy1;
float *infinite_heterozygosis;
float *homoplasyloc;
float homoplasymeanloc;
char **microchain,**ISchain;
float SH,MASH,SASH,SHchanges,SHdist;
int flagsimulation,varianceflag,heteroflag,conflag,piflag,goodnessflag,homoflag, singletonflag;
int datasites,simsites, sitesflag;
int datasingleton, simsingleton;
int *microminsize, *micromaxsize, segsitedif;
int msitesflag;
float datamicsegsites,simmicsegsites;
int heterohapflag;
float dataheterohap, simheterohap;
int configmicmeanflag;
float dataconfigmicvar, simconfigmicvar;
float HBC;
int ISconfigurations;
int heteroISflag, conISflag,piISflag,goodnessISflag;
int sitesISflag, sitesvarIS,singletonISflag, heterohapISflag, configmicvarISflag;
float dataISheterozygosis, simISheterozygosis;
int dataISnumberofconfig, simISnumberofconfig;
float dataISpi, simISpi;
int dataISsites,simISsites;
int dataISsingleton,simISsingleton;
float dataISsitesvar, simISsitesvar;
float dataISheterohap,simISheterohap;
float dataISconfigmicvar, simISconfigmicvar;
float dif11,dif12,dif13,dif14,dif15,dif16,dif17,dif18,dif19; 
char ***datainfinitesitepart;
float dataISvariancemean,simISvariancemean;
int varISflag;
int readmicroflag,readISflag;
float TMRCA;
float acceptancesflag;
};
